# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com
before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...
builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of uname.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
    - goos: windows
      format: zip
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ incpatch .Version }}-next"
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'

# .goreleaser.yaml
brews:
  -
    # Name of the recipe
    #
    # Default: ProjectName
    # Templates: allowed
    name: codeassistant

    # IDs of the archives to use.
    # Empty means all IDs.
    # ids:
    #  - foo
    #  - bar

    # GOARM to specify which 32-bit arm version to use if there are multiple
    # versions from the build section. Brew formulas support only one 32-bit
    # version.
    #
    # Default: 6
    #goarm: 6

    # GOAMD64 to specify which amd64 version to use if there are multiple
    # versions from the build section.
    #
    # Default: v1
    #goamd64: v1

    # NOTE: make sure the url_template, the token and given repo (github or
    # gitlab) owner and name are from the same kind.
    # We will probably unify this in the next major version like it is
    # done with scoop.

    # GitHub/GitLab repository to push the formula to
    tap:
      # Repository owner.
      #
      # Templates: allowed
      owner: spandigital

      # Repository name.
      #
      # Templates: allowed
      name: homebrew-tap

      # Optionally a branch can be provided.
      #
      # Default: default repository branch.
      #
      # Templates: allowed
      #branch: main

      # Optionally a token can be provided, if it differs from the token
      # provided to GoReleaser
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"

      # Sets up pull request creation instead of just pushing to the given branch.
      # Make sure the 'branch' property is different from base before enabling
      # it.
      #
      # Since: v1.17
      pull_request:
        # Whether to enable it or not.
        enabled: true

        # Base branch of the PR.
        #
        # Default: default repository branch.
        #base: main

    # URL which is determined by the given Token (github, gitlab or gitea).
    #
    # Default depends on the client.
    # Templates: allowed
    #url_template: "https://github.mycompany.com/foo/bar/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    url_template: https://github.com/SPANDigital/codeassistant/releases/download/{{ .Tag }}/{{ .ArtifactName }}"

    # Allows you to set a custom download strategy. Note that you'll need
    # to implement the strategy and add it to your tap repository.
    # Example: https://docs.brew.sh/Formula-Cookbook#specifying-the-download-strategy-explicitly
    download_strategy: CurlDownloadStrategy

    # Allows you to add a custom require_relative at the top of the formula
    # template.
    #custom_require: custom_download_strategy

    # Git author used to commit to the repository.
    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com

    # The project name and current git tag are used in the format string.
    #
    # Templates: allowed
    #commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"

    # Folder inside the repository to put the formula.
    folder: Formula

    # Caveats for the user of your binary.
    #caveats: "How to use this binary"

    # Your app's homepage.
    homepage: "https://github.com/SPANDigital/codeassistant"

    # Your app's description.
    #
    # Templates: allowed
    description: "Software to create fast and easy drum rolls."

    # SPDX identifier of your app's license.
    # license: "MIT"

    # Setting this will prevent goreleaser to actually try to commit the updated
    # formula - instead, the formula file will be stored on the dist folder only,
    # leaving the responsibility of publishing it to the user.
    # If set to auto, the release will not be uploaded to the homebrew tap
    # in case there is an indicator for prerelease in the tag e.g. v1.0.0-rc1
    # skip_upload: true

    # Custom block for brew.
    # Can be used to specify alternate downloads for devel or head releases.
    #custom_block: |
    #  head "https://github.com/some/package.git"
    #  ...

    # Packages your package depends on.
    #dependencies:
    #  - name: git
    #  - name: zsh
    #    type: optional
    #  - name: fish
    #    version: v1.2.3
    #  # if providing both version and type, only the type will be taken into
    #  # account.
    #  - name: elvish
    #    type: optional
    #    version: v1.2.3


    # Packages that conflict with your package.
    # conflicts:
    #  - svn
    #  - bash

    # Specify for packages that run as a service.
    #plist: |
    #  <?xml version="1.0" encoding="UTF-8"?>
    #  # ...

    # Service block.
    #
    # Since: v1.7
    #service: |
    #  run: foo/bar
    #  # ...

    # So you can `brew test` your formula.
    #test: |
    #  system "#{bin}/foo --version"
    #  # ...

    # Custom install script for brew.
    # Default: 'bin.install "BinaryName"'
    # install: |
    #  bin.install "some_other_name"
    #  bash_completion.install "completions/foo.bash" => "foo"
    #  # ...

    # Custom post_install script for brew.
    # Could be used to do any additional work after the "install" script
    # post_install: |
    #  etc.install "app-config.conf"
    #  ...

        

# The lines beneath this are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
